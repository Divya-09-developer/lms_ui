import React, { useEffect, useRef } from 'react';

// jQuery code (minified version)
const jQueryCode = `
(function (global) {
    var jQuery = function (selector) {
        return new jQuery.fn.init(selector);
    };

    jQuery.fn = jQuery.prototype = {
        constructor: jQuery,
        init: function (selector) {
            // jQuery initialization logic
            return this;
        },
        // Add jQuery methods here
        on: function (event, handler) {
            // Event handling logic
            return this;
        },
        css: function (property, value) {
            // CSS manipulation logic
            return this;
        },
        // More methods...
    };

    jQuery.fn.init.prototype = jQuery.fn;

    // Expose jQuery to the global object
    global.jQuery = global.$ = jQuery;
})(this);
`;

const MyComponent = () => {
    const containerRef = useRef(null);

    useEffect(() => {
        // Dynamically load jQuery
        const script = document.createElement('script');
        script.text = jQueryCode; // Use the jQuery code defined above
        document.body.appendChild(script);

        // Initialize jQuery functionality
        const $ = window.jQuery; // Access jQuery from the global window object

        $(containerRef.current).on('click', function () {
            console.log('Container clicked!');
            $(this).css('background-color', 'lightblue'); // Example jQuery manipulation
        });

        // Cleanup function to remove event listeners
        return () => {
            $(containerRef.current).off('click');
        };
    }, []);

    return (
        <div ref={containerRef} style={{ padding: '20px', border: '1px solid black' }}>
            Click me!
        </div>
    );
};

export default MyComponent;